// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Library Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 31.05.2024 14:52:29 (- $Rev: 12980 $, 1749257218).

[
  uuid(6FE83C54-4C5A-48CC-A873-090A627CCAAD), 
  version(5.17), 
  helpstring("MITSU 1-F driver for 1C"), 
  control
    
]
library MitsuLib
{

  importlib("stdole2.tlb");

  interface IDrvFR1C;
  coclass DrvFR1C;
  interface IDrvFR1C11;
  coclass DrvFR1C11;
  interface IDrvFR1C17;
  coclass DrvFR1C17;
  interface IDrvFR1C22;
  coclass DrvFR1C22;
  interface IDrvFR1C30;
  coclass DrvFR1C30;


  [
    uuid(67F607AD-6F55-494F-82E4-9B7199EE0D7B), 
    version(1.0), 
    dual, 
    oleautomation
  ]
  interface IDrvFR1C: IDispatch
  {
    [id(0x000000C9), helpstring("ѕолучитьЌомер¬ерсии")]
    HRESULT _stdcall GetVersion([out, retval] BSTR* Value);
    [id(0x000000CA), helpstring("ѕолучитьќшибку")]
    HRESULT _stdcall GetLastError([out] BSTR* ErrorDescription, [out, retval] long* Value);
    [id(0x000000CC), helpstring("ќтключить")]
    HRESULT _stdcall Close([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CD), helpstring("ЌапечататьќтчетЅез√ашени€")]
    HRESULT _stdcall PrintXReport([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CE), helpstring("Ќапечататьќтчет—√ашением")]
    HRESULT _stdcall PrintZReport([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CF), helpstring("Ќапечатать„ек¬несени€¬ыемки")]
    HRESULT _stdcall CashInOutcome([in] BSTR DeviceID, [in] double Amount, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D0), helpstring("ќткрыть„ек")]
    HRESULT _stdcall OpenCheck([in] BSTR DeviceID, [in] VARIANT_BOOL IsFiscalCheck, [in] VARIANT_BOOL IsReturnCheck, [in] VARIANT_BOOL CancelOpenedCheck, [out] long* CheckNumber, [out] long* SessionNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D1), helpstring("Ќапечатать‘иск—троку")]
    HRESULT _stdcall PrintFiscalString([in] BSTR DeviceID, [in] BSTR Name, [in] double Quantity, [in] double Price, [in] double Amount, [in] long Department, [in] float Tax, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D2), helpstring("«акрыть„ек")]
    HRESULT _stdcall CloseCheck([in] BSTR DeviceID, [in] double Cash, [in] double PayByCard, [in] double PayByCredit, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D3), helpstring("ќтменить„ек")]
    HRESULT _stdcall CancelCheck([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D4), helpstring("ЌапечататьЌефиск—троку")]
    HRESULT _stdcall PrintNonFiscalString([in] BSTR DeviceID, [in] BSTR TextString, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D5), helpstring("“ест”стройства")]
    HRESULT _stdcall DeviceTest([in]  IDispatch* ValuesArray, [out] BSTR* AdditionalDescription, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CB), helpstring("ѕодключить")]
    HRESULT _stdcall Open([in]  IDispatch* ValuesArray, [out] BSTR* DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D6), helpstring("ѕроверить—осто€ниеѕечати")]
    HRESULT _stdcall CheckPrintingStatus([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D7), helpstring("ѕродолжитьѕечать")]
    HRESULT _stdcall ContinuePrinting([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D8), helpstring("ќткрытьƒенежныйящик")]
    HRESULT _stdcall OpenCashDrawer([in] BSTR DeviceID, [in] long CashDrawerID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D9), helpstring("«агрузитьЋоготип")]
    HRESULT _stdcall LoadLogo([in]  IDispatch* ValuesArray, [in] BSTR LogoFileName, [in] VARIANT_BOOL CenterLogo, [out] long* LogoSize, [out] BSTR* AdditionalDescription, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DA), helpstring("ќткрыть—мену")]
    HRESULT _stdcall OpenSession([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DB), helpstring("”правление”стройством")]
    HRESULT _stdcall DeviceControl([in] BSTR DeviceID, [in] BSTR TxData, [out] BSTR* RxData, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DC), helpstring("”правление”стройством’екс")]
    HRESULT _stdcall DeviceControlHEX([in] BSTR DeviceID, [in] BSTR TxData, [out] BSTR* RxData, [out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000DD), helpstring("—кидкаЌа„ек")]
    HRESULT _stdcall DiscountOnCheck([out, retval] double* Value);
    [propput, id(0x000000DD), helpstring("—кидкаЌа„ек")]
    HRESULT _stdcall DiscountOnCheck([in] double Value);
    [propget, id(0x000000DE), helpstring("“ипќплаты4")]
    HRESULT _stdcall PayType4([out, retval] double* Value);
    [propput, id(0x000000DE), helpstring("“ипќплаты4")]
    HRESULT _stdcall PayType4([in] double Value);
  };

  [
    uuid(9941F158-93F5-4DA2-A333-BB4937B58E05), 
    version(1.0), 
    helpstring("Dispatch interface for DrvFR1C11 Object"), 
    dual, 
    oleautomation
  ]
  interface IDrvFR1C11: IDispatch
  {
    [id(0x000000C9), helpstring("ѕолучитьЌомер¬ерсии")]
    HRESULT _stdcall GetVersion([out, retval] BSTR* Value);
    [id(0x000000CA), helpstring("ѕолучитьќписание")]
    HRESULT _stdcall GetDescription([out] BSTR* Name, [out] BSTR* Description, [out] BSTR* EquipmentType, [out] long* InterfaceRevision, [out] VARIANT_BOOL* IntegrationLibrary, [out] VARIANT_BOOL* MainDriverInstalled, [out] BSTR* GetDownloadURL, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CB), helpstring("ѕолучитьќшибку")]
    HRESULT _stdcall GetLastError([out] BSTR* ErrorDescription, [out, retval] long* Value);
    [id(0x000000CC), helpstring("ѕолучитьѕараметры")]
    HRESULT _stdcall GetParameters([out] BSTR* TableParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CD), helpstring("”становитьѕараметр")]
    HRESULT _stdcall SetParameter([in] BSTR Name, [in] VARIANT Value, [out, retval] VARIANT_BOOL* Value1);
    [id(0x000000CE), helpstring("ѕодключить")]
    HRESULT _stdcall Open([out] BSTR* DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CF), helpstring("ќтключить")]
    HRESULT _stdcall Close([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D0), helpstring("“ест”стройства")]
    HRESULT _stdcall DeviceTest([out] BSTR* Description, [out] BSTR* DemoModeIsActivated, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D1), helpstring("ѕолучитьƒополнительныеƒействи€")]
    HRESULT _stdcall GetAdditionalActions([out] BSTR* TableActions, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D2), helpstring("¬ыполнитьƒополнительноеƒействие")]
    HRESULT _stdcall DoAdditionalAction([in] BSTR ActionName, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D3), helpstring("ќткрыть„ек")]
    HRESULT _stdcall OpenCheck([in] BSTR DeviceID, [in] VARIANT_BOOL IsFiscalCheck, [in] VARIANT_BOOL IsReturnCheck, [in] VARIANT_BOOL CancelOpenedCheck, [out] long* CheckNumber, [out] long* SessionNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D4), helpstring("Ќапечатать‘иск—троку")]
    HRESULT _stdcall PrintFiscalString([in] BSTR DeviceID, [in] BSTR Name, [in] double Quantity, [in] double Price, [in] double Amount, [in] long Department, [in] double Tax, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D5), helpstring("ЌапечататьЌефиск—троку")]
    HRESULT _stdcall PrintNonFiscalString([in] BSTR DeviceID, [in] BSTR TextString, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D6), helpstring("ЌапечататьЎтрих од")]
    HRESULT _stdcall PrintBarCode([in] BSTR DeviceID, [in] BSTR BarcodeType, [in] BSTR BarCode, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D7), helpstring("«акрыть„ек")]
    HRESULT _stdcall CloseCheck([in] BSTR DeviceID, [in] double Cash, [in] double PayByCard, [in] double PayByCredit, [in] double PayByCertificate, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D8), helpstring("ќтменить„ек")]
    HRESULT _stdcall CancelCheck([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D9), helpstring("Ќапечатать„ек¬несени€¬ыемки")]
    HRESULT _stdcall CashInOutcome([in] BSTR DeviceID, [in] double Amount, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DA), helpstring("ЌапечататьќтчетЅез√ашени€")]
    HRESULT _stdcall PrintXReport([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DB), helpstring("Ќапечататьќтчет—√ашением")]
    HRESULT _stdcall PrintZReport([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DC), helpstring("ќткрытьƒенежныйящик")]
    HRESULT _stdcall OpenCashDrawer([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DD), helpstring("ѕолучитьЎирину—троки")]
    HRESULT _stdcall GetLineLength([in] BSTR DeviceID, [out] long* LineLength, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DE)]
    HRESULT _stdcall SetLang([in] long LangID);
    [id(0x000000DF), helpstring("ќткрыть—мену")]
    HRESULT _stdcall OpenShift([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E0), helpstring("Ќапечатать‘иск—троку2")]
    HRESULT _stdcall PrintFiscalString2([in] BSTR DeviceID, [in] BSTR Name, [in] double Quantity, [in] double Price, [in] double Amount, [in] long Department, [in] long Tax1, [in] long Tax2, [in] long Tax3, [in] long Tax4, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E1), helpstring("ѕродолжитьѕечать")]
    HRESULT _stdcall ContinuePrinting([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E2), helpstring("ѕроверить—осто€ниеѕечати")]
    HRESULT _stdcall CheckPrintingStatus([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E3), helpstring("”правление”стройством’екс")]
    HRESULT _stdcall DeviceControlHEX([in] BSTR DeviceID, [in] BSTR TxData, [out] BSTR* RxData, [out, retval] VARIANT_BOOL* Value);
  };

  [
    uuid(135578E8-34E8-440C-AFEC-993C33CC9153), 
    version(1.0), 
    helpstring("Dispatch interface for DrvFR1C17 Control"), 
    dual, 
    oleautomation
  ]
  interface IDrvFR1C17: IDispatch
  {
    [id(0x000000C9), helpstring("ѕолучитьЌомер¬ерсии")]
    HRESULT _stdcall GetVersion([out, retval] BSTR* Value);
    [id(0x000000CA), helpstring("ѕолучитьќписание")]
    HRESULT _stdcall GetDescription([out] BSTR* Name, [out] BSTR* Description, [out] BSTR* EquipmentType, [out] long* InterfaceRevision, [out] VARIANT_BOOL* IntegrationLibrary, [out] VARIANT_BOOL* MainDriverInstalled, [out] BSTR* DownloadURL, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CB), helpstring("ѕолучитьќшибку")]
    HRESULT _stdcall GetLastError([out] BSTR* ErrorDescription, [out, retval] long* Value);
    [id(0x000000CC), helpstring("ѕолучитьѕараметры")]
    HRESULT _stdcall GetParameters([out] BSTR* TableParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CD), helpstring("”становитьѕараметр")]
    HRESULT _stdcall SetParameter([in] BSTR Name, [in] VARIANT Value, [out, retval] VARIANT_BOOL* Value1);
    [id(0x000000CE), helpstring("ѕодключить")]
    HRESULT _stdcall Open([out] BSTR* DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CF), helpstring("ќтключить")]
    HRESULT _stdcall Close([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D0), helpstring("“ест”стройства")]
    HRESULT _stdcall DeviceTest([out] BSTR* Description, [out] BSTR* DemoModeIsActivated, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D1), helpstring("ѕолучитьƒополнительныеƒействи€")]
    HRESULT _stdcall GetAdditionalActions([out] BSTR* TableActions, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D2), helpstring("¬ыполнитьƒополнительноеƒействие")]
    HRESULT _stdcall DoAdditionalAction([in] BSTR ActionName, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D3), helpstring("ѕолучитьѕараметры  “")]
    HRESULT _stdcall GetDataKKT([in] BSTR DeviceID, [out] BSTR* TableParametersKKT, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D4), helpstring("ќпераци€‘Ќ")]
    HRESULT _stdcall OperationFN([in] BSTR DeviceID, [in] long OperationType, [in] BSTR CashierName, [in] BSTR ParametersFiscal, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D5), helpstring("ќткрыть—мену")]
    HRESULT _stdcall OpenShift([in] BSTR DeviceID, [in] BSTR CashierName, [out] long* SessionNumber, [out] long* DocumentNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D6), helpstring("«акрыть—мену")]
    HRESULT _stdcall CloseShift([in] BSTR DeviceID, [in] BSTR CashierName, [out] long* SessionNumber, [out] long* DocumentNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D7), helpstring("—формировать„ек")]
    HRESULT _stdcall ProcessCheck([in] BSTR DeviceID, [in] BSTR CashierName, [in] VARIANT_BOOL Electronically, [in] BSTR CheckPackage, [out] long* CheckNumber, [out] long* SessionNumber, [out] BSTR* FiscalSign, [out] BSTR* AddressSiteInspections, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D8), helpstring("—формировать„ек оррекции")]
    HRESULT _stdcall ProcessCorrectionCheck([in] BSTR DeviceID, [in] BSTR CashierName, [in] BSTR CheckCorrectionPackage, [out] long* CheckNumber, [out] long* SessionNumber, [out] BSTR* FiscalSign, [out] BSTR* AddressSiteInspections, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D9), helpstring("Ќапечатать„ек¬несени€¬ыемки")]
    HRESULT _stdcall CashInOutcome([in] BSTR DeviceID, [in] double Amount, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DA), helpstring("ѕолучить“екущее—осто€ние")]
    HRESULT _stdcall GetCurrentStatus([in] BSTR DeviceID, [out] long* CheckNumber, [out] long* SessionNumber, [out] long* SessionState, [out] BSTR* StatusParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DB), helpstring("ќтчетќ“екущем—осто€нии–асчетов")]
    HRESULT _stdcall ReportCurrentStatusOfSettlements([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DC), helpstring("ќткрытьƒенежныйящик")]
    HRESULT _stdcall OpenCashDrawer([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DD), helpstring("ѕолучитьЎирину—троки")]
    HRESULT _stdcall GetLineLength([in] BSTR DeviceID, [out] long* LineLength, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DE), helpstring("Ќапечатать“екстовыйƒокумент")]
    HRESULT _stdcall PrintTextDocument([in] BSTR DeviceID, [in] BSTR DocumentPackage, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DF)]
    HRESULT _stdcall SetLang([in] long LangID);
    [id(0x000000E0), helpstring("ЌапечататьќтчетЅез√ашени€")]
    HRESULT _stdcall PrintXReport([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
  };

  [
    uuid(DFD84A0D-EFCF-4805-B8CF-125F2996576A), 
    version(1.0), 
    helpstring("Dispatch interface for DrvFR1C22 Object"), 
    dual, 
    oleautomation
  ]
  interface IDrvFR1C22: IDispatch
  {
    [id(0x000000C9), helpstring("ѕолучитьЌомер¬ерсии")]
    HRESULT _stdcall GetVersion([out, retval] BSTR* Value);
    [id(0x000000CA), helpstring("ѕолучитьќписание")]
    HRESULT _stdcall GetDescription([out] BSTR* Name, [out] BSTR* Description, [out] BSTR* EquipmentType, [out] long* InterfaceRevision, [out] VARIANT_BOOL* IntegrationLibrary, [out] VARIANT_BOOL* MainDriverInstalled, [out] BSTR* DownloadURL, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CB), helpstring("ѕолучитьќшибку")]
    HRESULT _stdcall GetLastError([out] BSTR* ErrorDescription, [out, retval] long* Value);
    [id(0x000000CC), helpstring("ѕолучитьѕараметры")]
    HRESULT _stdcall GetParameters([out] BSTR* TableParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CD), helpstring("”становитьѕараметр")]
    HRESULT _stdcall SetParameter([in] BSTR Name, [in] VARIANT Value, [out, retval] VARIANT_BOOL* Value1);
    [id(0x000000CE), helpstring("ѕодключить")]
    HRESULT _stdcall Open([out] BSTR* DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CF), helpstring("ќтключить")]
    HRESULT _stdcall Close([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D0), helpstring("“ест”стройства")]
    HRESULT _stdcall DeviceTest([out] BSTR* Description, [out] BSTR* DemoModeIsActivated, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D1), helpstring("ѕолучитьƒополнительныеƒействи€")]
    HRESULT _stdcall GetAdditionalActions([out] BSTR* TableActions, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D2), helpstring("¬ыполнитьƒополнительноеƒействие")]
    HRESULT _stdcall DoAdditionalAction([in] BSTR ActionName, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D3), helpstring("ѕолучитьѕараметры  “")]
    HRESULT _stdcall GetDataKKT([in] BSTR DeviceID, [out] BSTR* TableParametersKKT, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D4), helpstring("ќпераци€‘Ќ")]
    HRESULT _stdcall OperationFN([in] BSTR DeviceID, [in] long OperationType, [in] BSTR ParametersFiscal, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D5), helpstring("ќткрыть—мену")]
    HRESULT _stdcall OpenShift([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out] long* SessionNumber, [out] long* DocumentNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D6), helpstring("«акрыть—мену")]
    HRESULT _stdcall CloseShift([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out] long* SessionNumber, [out] long* DocumentNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D7), helpstring("—формировать„ек")]
    HRESULT _stdcall ProcessCheck([in] BSTR DeviceID, [in] VARIANT_BOOL Electronically, [in] BSTR CheckPackage, [out] long* CheckNumber, [out] long* SessionNumber, [out] BSTR* FiscalSign, [out] BSTR* AddressSiteInspections, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D8), helpstring("—формировать„ек оррекции")]
    HRESULT _stdcall ProcessCorrectionCheck([in] BSTR DeviceID, [in] BSTR CheckCorrectionPackage, [out] long* CheckNumber, [out] long* SessionNumber, [out] BSTR* FiscalSign, [out] BSTR* AddressSiteInspections, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D9), helpstring("Ќапечатать“екстовыйƒокумент")]
    HRESULT _stdcall PrintTextDocument([in] BSTR DeviceID, [in] BSTR DocumentPackage, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DA), helpstring("Ќапечатать„ек¬несени€¬ыемки")]
    HRESULT _stdcall CashInOutcome([in] BSTR DeviceID, [in] BSTR InputParameters, [in] double Amount, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DB), helpstring("ЌапечататьќтчетЅез√ашени€")]
    HRESULT _stdcall PrintXReport([in] BSTR DeviceID, [in] BSTR InputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DC), helpstring("ѕолучить“екущее—осто€ние")]
    HRESULT _stdcall GetCurrentStatus([in] BSTR DeviceID, [out] long* CheckNumber, [out] long* SessionNumber, [out] long* SessionState, [out] BSTR* StatusParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DD), helpstring("ќтчетќ“екущем—осто€нии–асчетов")]
    HRESULT _stdcall ReportCurrentStatusOfSettlements([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DE), helpstring("ќткрытьƒенежныйящик")]
    HRESULT _stdcall OpenCashDrawer([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DF), helpstring("ѕолучитьЎирину—троки")]
    HRESULT _stdcall GetLineLength([in] BSTR DeviceID, [out] long* LineLength, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E0)]
    HRESULT _stdcall SetLang([in] long LangID);
  };

  [
    uuid(E390D34B-02C3-46C8-803C-DB8131AC5331), 
    version(1.0), 
    dual, 
    oleautomation
  ]
  interface IDrvFR1C30: IDispatch
  {
    [id(0x000000C9), helpstring("ѕолучить–евизию»нтерфейса")]
    HRESULT _stdcall GetInterfaceRevision([out, retval] long* Value);
    [id(0x000000CA), helpstring("ѕолучитьќписание")]
    HRESULT _stdcall GetDescription([out] BSTR* DriverDescription, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CB), helpstring("ѕолучитьќшибку")]
    HRESULT _stdcall GetLastError([out] BSTR* ErrorDescription, [out, retval] long* Value);
    [id(0x000000CC), helpstring("ѕолучитьѕараметры")]
    HRESULT _stdcall GetParameters([out] BSTR* TableParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CD), helpstring("”становитьѕараметр")]
    HRESULT _stdcall SetParameter([in] BSTR Name, [in] VARIANT Value, [out, retval] VARIANT_BOOL* Value1);
    [id(0x000000CE), helpstring("ѕодключить")]
    HRESULT _stdcall Open([out] BSTR* DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000CF), helpstring("ќтключить")]
    HRESULT _stdcall Close([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D0), helpstring("“ест”стройства")]
    HRESULT _stdcall DeviceTest([out] BSTR* Description, [out] BSTR* DemoModeIsActivated, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D1), helpstring("ѕолучитьƒополнительныеƒействи€")]
    HRESULT _stdcall GetAdditionalActions([out] BSTR* TableActions, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D2), helpstring("¬ыполнитьƒополнительноеƒействие")]
    HRESULT _stdcall DoAdditionalAction([in] BSTR ActionName, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D3), helpstring("ѕолучитьѕараметры  “")]
    HRESULT _stdcall GetDataKKT([in] BSTR DeviceID, [out] BSTR* TableParametersKKT, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D4), helpstring("ќпераци€‘Ќ")]
    HRESULT _stdcall OperationFN([in] BSTR DeviceID, [in] long OperationType, [in] BSTR ParametersFiscal, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D5), helpstring("ќткрыть—мену")]
    HRESULT _stdcall OpenShift([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D6), helpstring("«акрыть—мену")]
    HRESULT _stdcall CloseShift([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D7), helpstring("—формировать„ек")]
    HRESULT _stdcall ProcessCheck([in] BSTR DeviceID, [in] VARIANT_BOOL Electronically, [in] BSTR CheckPackage, [out] BSTR* DocumentOutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000D8), helpstring("—формировать„ек оррекции")]
    HRESULT _stdcall ProcessCorrectionCheck([in] BSTR DeviceID, [in] BSTR CheckPackage, [out] BSTR* DocumentOutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DA), helpstring("Ќапечатать„ек¬несени€¬ыемки")]
    HRESULT _stdcall CashInOutcome([in] BSTR DeviceID, [in] BSTR InputParameters, [in] double Amount, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DB), helpstring("ЌапечататьќтчетЅез√ашени€")]
    HRESULT _stdcall PrintXReport([in] BSTR DeviceID, [in] BSTR InputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DC), helpstring("ѕолучить“екущее—осто€ние")]
    HRESULT _stdcall GetCurrentStatus([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DD), helpstring("ќтчетќ“екущем—осто€нии–асчетов")]
    HRESULT _stdcall ReportCurrentStatusOfSettlements([in] BSTR DeviceID, [in] BSTR InputParameters, [out] BSTR* OutputParameters, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DE), helpstring("ќткрытьƒенежныйящик")]
    HRESULT _stdcall OpenCashDrawer([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000DF), helpstring("ѕолучитьЎирину—троки")]
    HRESULT _stdcall GetLineLength([in] BSTR DeviceID, [out] long* LineLength, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E0), helpstring("Ќапечатать опию„ека")]
    HRESULT _stdcall PrintCheckCopy([in] BSTR DeviceID, [in] BSTR CheckNumber, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E1), helpstring("Ќапечатать“екстовыйƒокумент")]
    HRESULT _stdcall PrintTextDocument([in] BSTR DeviceID, [in] BSTR DocumentPackage, [out, retval] VARIANT_BOOL* Value);
    [propget, id(0x000000D9)]
    HRESULT _stdcall sm_FormatVersion([out, retval] long* Value);
    [propput, id(0x000000D9)]
    HRESULT _stdcall sm_FormatVersion([in] long Value);
    [id(0x000000E2), helpstring("ќткрыть—ессию–егистрации ћ")]
    HRESULT _stdcall OpenSessionRegistrationKM([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E3), helpstring("«акрыть—ессию–егистрации ћ")]
    HRESULT _stdcall CloseSessionRegistrationKM([in] BSTR DeviceID, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E4), helpstring("«апрос ћ")]
    HRESULT _stdcall RequestKM([in] BSTR DeviceID, [in] BSTR RequestKM, [out] BSTR* RequestKMResult, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E5), helpstring("ѕолучить–езультаты«апроса ћ")]
    HRESULT _stdcall GetProcessingKMResult([in] BSTR DeviceID, [out] BSTR* ProcessingKMResult, [out] long* RequestStatus, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E6), helpstring("ѕодтвердить ћ")]
    HRESULT _stdcall ConfirmKM([in] BSTR DeviceID, [in] BSTR RequestGUID, [in] long ConfirmationType, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E7), helpstring("ѕолучитьЎаблонЋокализации")]
    HRESULT _stdcall GetLocalizationPattern([out] BSTR* LocalizationPattern, [out, retval] VARIANT_BOOL* Value);
    [id(0x000000E8), helpstring("”становитьЋокализацию ")]
    HRESULT _stdcall SetLocalization([in] BSTR LanguageCode, [in] BSTR LocalizationPattern, [out, retval] VARIANT_BOOL* Value);
  };

  [
    uuid(129C1D7A-384D-4CD6-9F28-7CF321FF9D04), 
    version(1.0), 
    helpstring("ƒрайвер ‘– 1—")
  ]
  coclass DrvFR1C
  {
    [default] interface IDrvFR1C;
  };

  [
    uuid(44809D9F-9A23-4CDD-A4CC-39A052C3BDFB), 
    version(1.0), 
    helpstring("DrvFR1C11 Object")
  ]
  coclass DrvFR1C11
  {
    [default] interface IDrvFR1C11;
  };

  [
    uuid(6A751D33-0AAB-4339-BCC4-8056B3FC87F4), 
    version(1.0), 
    helpstring("DrvFR1C17 Control")
  ]
  coclass DrvFR1C17
  {
    [default] interface IDrvFR1C17;
  };

  [
    uuid(E5903D73-66CC-42D7-9647-DBD2C837D8A7), 
    version(1.0), 
    helpstring("DrvFR1C22 Object")
  ]
  coclass DrvFR1C22
  {
    [default] interface IDrvFR1C22;
  };

  [
    uuid(32D32C7A-CEF9-4AC5-8953-3D6DF81ABBD6), 
    version(1.0), 
    control
  ]
  coclass DrvFR1C30
  {
    [default] interface IDrvFR1C30;
  };

};